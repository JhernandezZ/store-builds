{
  "version": 3,
  "file": "selector-utils.js",
  "sources": [
    "ng://@ngxs/store/packages/store/src/utils/selector-utils.ts"
  ],
  "sourcesContent": [
    "import {\r\n  SelectFromState,\r\n  fastPropGetter,\r\n  ensureSelectorMetadata,\r\n  getSelectorMetadata,\r\n  getStoreMetadata\r\n} from '../internal/internals';\r\nimport { memoize } from '../utils/memoize';\r\n\r\n/**\r\n * Function for creating a selector\r\n * @param selectors The selectors to use to create the arguments of this function\r\n * @param originalFn The original function being made into a selector\r\n */\r\nexport function createSelector(\r\n  selectors: any[],\r\n  originalFn: any,\r\n  creationMetadata?: { containerClass: any; selectorName: string }\r\n) {\r\n  const wrappedFn = function wrappedSelectorFn(...args) {\r\n    const returnValue = originalFn(...args);\r\n    if (returnValue instanceof Function) {\r\n      const innerMemoizedFn = memoize.apply(null, [returnValue]);\r\n      return innerMemoizedFn;\r\n    }\r\n    return returnValue;\r\n  };\r\n  const memoizedFn = memoize(wrappedFn);\r\n  const containerClass = creationMetadata && creationMetadata.containerClass;\r\n\r\n  const fn = state => {\r\n    const results = [];\r\n\r\n    const selectorsToApply = [];\r\n\r\n    if (containerClass) {\r\n      // If we are on a state class, add it as the first selector parameter\r\n      const metadata = getStoreMetadata(containerClass);\r\n      if (metadata) {\r\n        selectorsToApply.push(containerClass);\r\n      }\r\n    }\r\n    if (selectors) {\r\n      selectorsToApply.push(...selectors);\r\n    }\r\n    // Determine arguments from the app state using the selectors\r\n    if (selectorsToApply) {\r\n      results.push(...selectorsToApply.map(a => getSelectorFn(a)(state)));\r\n    }\r\n\r\n    // if the lambda tries to access a something on the\r\n    // state that doesn't exist, it will throw a TypeError.\r\n    // since this is quite usual behaviour, we simply return undefined if so.\r\n    try {\r\n      return memoizedFn(...results);\r\n    } catch (ex) {\r\n      if (ex instanceof TypeError) {\r\n        return undefined;\r\n      }\r\n      throw ex;\r\n    }\r\n  };\r\n\r\n  const selectorMetaData = ensureSelectorMetadata(memoizedFn);\r\n  selectorMetaData.originalFn = originalFn;\r\n  selectorMetaData.selectFromAppState = fn;\r\n  if (creationMetadata) {\r\n    selectorMetaData.containerClass = creationMetadata.containerClass;\r\n    selectorMetaData.selectorName = creationMetadata.selectorName;\r\n  }\r\n  return memoizedFn;\r\n}\r\n\r\n/**\r\n * This function gets the selector function to be used to get the selected slice from the app state\r\n * @ignore\r\n */\r\nexport function getSelectorFn(selector: any): SelectFromState {\r\n  const selectorMetadata = getSelectorMetadata(selector);\r\n  if (selectorMetadata) {\r\n    const selectFromAppState = selectorMetadata.selectFromAppState;\r\n    if (selectFromAppState) {\r\n      return selectFromAppState;\r\n    }\r\n  }\r\n  const stateMetadata = getStoreMetadata(selector);\r\n  if (stateMetadata && stateMetadata.path) {\r\n    return fastPropGetter(stateMetadata.path.split('.'));\r\n  }\r\n  return selector;\r\n}\r\n"
  ],
  "names": [],
  "mappings": "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"
}
